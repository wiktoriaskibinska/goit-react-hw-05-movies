{"version":3,"file":"static/js/145.9e474c7b.chunk.js","mappings":"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","sources":["API/TmbdApi.jsx","components/FilmsList/FilmsList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '67c2a2291602c4c61ba941c82985f2dc';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\nexport const searchQueryFilm = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const searchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst FilmsList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {films.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default FilmsList;\n","import React from 'react';\n\nconst SearchForm = ({ searchMovies, query, setQuery }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n  const handleInputChange = evt => {\n    evt.preventDefault();\n    const value = evt.target.value;\n    setQuery(value);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <button>Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { searchQueryFilm } from 'API/TmbdApi';\nimport FilmsList from 'components/FilmsList/FilmsList';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const searchMovies = query => {\n    setLoading(true);\n    searchQueryFilm(query)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n        localStorage.setItem('searchQuery', query);\n        localStorage.setItem('searchResults', JSON.stringify(searchResults));\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    const query = localStorage.getItem('searchQuery');\n    const savedResults = localStorage.getItem('searchResults');\n    if (query) {\n      setQuery(query);\n    }\n    if (savedResults) {\n      setSearchFilms(JSON.parse(savedResults));\n    }\n  }, []);\n\n  return (\n    <section>\n      <h1>Search for a movie!</h1>\n      <SearchForm\n        searchMovies={searchMovies}\n        query={query}\n        setQuery={setQuery}\n      />\n      {loading && <Loader />}\n      {searchFilms.length > 0 ? (\n        <FilmsList films={searchFilms} />\n      ) : (\n        <p>Sorry, no movies found. </p>\n      )}\n    </section>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","axios","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","searchQueryFilm","_ref2","_callee2","keyword","_context2","_x","searchMovieById","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","films","location","useLocation","_jsx","children","map","movie","Link","to","id","state","from","title","searchMovies","query","setQuery","_jsxs","onSubmit","evt","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","searchFilms","setSearchFilms","_useState5","_useState6","loading","setLoading","useEffect","localStorage","getItem","savedResults","JSON","parse","SearchForm","then","searchResults","setItem","stringify","catch","error","console","log","finally","Loader","length","FilmsList"],"sourceRoot":""}